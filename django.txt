 create a foldder set the environment 
  -> python -m venv myvenv
Then activate is 
  -> myvenv\Scripts\activate

create a requirements.txt in myvenv
 and add add the Django version Then in myvenv
 -> pip install -r requirements.txt

 go back to the main file directory
 -> django-admin.exe startproject mysite .
 will cretae manage.py script that helps with management of the site

 changes in mysite
 "https://tutorial.djangogirls.org/en/django_start_project/"
 go here 

 after changing in mysite/setting.py 
  -> python manage.py migrate

  for running use 
  -> python manage.py runserver


//models
if want to create model, create object first 
model special kind of object, that is saved in the database

to create modal for blog
python manage.py startapp blog

after that go the setting page again and add newly created blog in INSTALLED_APPS

after making changes in blog/models.py
 -> python manage.py makemigrations blog

 after making changes in admin.py
 create an admin
 -> python manage.py createsuperuser


 Deploy using PythonAnywhere for small applications 
 pythonPassword 
 username: sonyaG

Everything in pythonanywhere bash 
 helper tool that will involves pulling down code from GitHub, then configuring PythonAnywhere to recognise it and start serving it as
 a web applications. ( it should be in the paythonAnywhere not git bash )
 for linux or others use: -> pip3.10 install --user pythonanywhere
 for window use: -> py -m pip install --user pythonanywhere
 then verify with
 -> py -m pip show pythonanywhere

 if clone didn't happen do manually
 -> git clone https://github......
 then 
 -> cd 

for creating superUser
-> python manage.py createsuperuser
-> ls ( for seeing list of files)

my web hosted on PythonAnywhere
https://sonyag.pythonanywhere.com/

now im live it has been deployed go to "web" inorder to get link 

 (This tells Python to run pip as a module, which is a reliable and version-safe way to install packages on Windows.)


superUser
    password:AnywherePassword
    username: sonyag

 API token
    username = 'sonyaG'
token = 'bd85ee79aad3ebdab282428cd178e105ca4b404e'

ORM and queryset

go to django shell in terminal(i went)
go here https://tutorial.djangogirls.org/en/django_orm/
-> python manage.py shell
 (now we are in django interactive console can use all python command)
 pthon command
   -> Post.objects.all()
   -> form blog.models import Post
   create new oject
   -> Post.objects.create(author=me, title='Sample title', text='Test')

   ( if post again migrate or clone git hub if any error occured) first the changes should be inside the git hub 


    Live Reload Tool for django